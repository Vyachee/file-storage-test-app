version: '3'
services:
    laravel.test:
        container_name: 'app'
        build:
            context: ./vendor/laravel/sail/runtimes/8.2
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: sail-8.2/app
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - pgsql
            - minio
    pgsql:
        image: 'postgres:15'
        container_name: 'pgsql'
        ports:
            - '${FORWARD_DB_PORT:-5432}:5432'
        environment:
            PGPASSWORD: '${DB_PASSWORD:-secret}'
            POSTGRES_DB: '${DB_DATABASE}'
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
        volumes:
            - 'sail-pgsql:/var/lib/postgresql/data'
            - './vendor/laravel/sail/database/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - pg_isready
                - '-q'
                - '-d'
                - '${DB_DATABASE}'
                - '-U'
                - '${DB_USERNAME}'
            retries: 3
            timeout: 5s
    minio:
        image: 'minio/minio:latest'
        container_name: 'minio'
        ports:
            - '${FORWARD_MINIO_PORT:-9000}:9000'
            - '${FORWARD_MINIO_CONSOLE_PORT:-8900}:8900'
        environment:
            MINIO_ROOT_USER: '${AWS_ACCESS_KEY_ID:-sail}'
            MINIO_ROOT_PASSWORD: '${AWS_SECRET_ACCESS_KEY:-password}'
        volumes:
            - 'sail-minio:/data/minio'
        networks:
            - sail
        command: 'minio server /data/minio --console-address ":8900"'
        healthcheck:
            test:
                - CMD
                - curl
                - '-f'
                - 'http://localhost:9000/minio/health/live'
            retries: 3
            timeout: 5s
    web:
        build:
            context: frontend
            dockerfile: Dockerfile
        ports:
            - 8080:8080
        volumes:
            - ./frontend:/project

    createbuckets:
        image: minio/mc
        depends_on:
            - minio
        networks:
            - sail
        entrypoint: >
            /bin/sh -c "
            /usr/bin/mc alias set myminio http://minio:${FORWARD_MINIO_PORT:-9000} ${AWS_ACCESS_KEY_ID:-sail} ${AWS_SECRET_ACCESS_KEY:-password};
            /usr/bin/mc mb myminio/files;
            /usr/bin/mc policy set public myminio/files;
            exit 0;
            "
networks:
    sail:
        driver: bridge
volumes:
    sail-pgsql:
        driver: local
    sail-minio:
        driver: local
